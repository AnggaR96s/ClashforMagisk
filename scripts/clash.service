#!/system/bin/sh

scripts=`realpath $0`
scripts_dir=`dirname ${scripts}`
. ${scripts_dir}/clash.config

start_clash() {
    if [ ! -f "${Clash_run_path}" ] ; then
       mkdir -p ${Clash_run_path}
    fi
   
    if [ -f "${CFM_logs_file}" ] ; then
       rm -rf ${CFM_logs_file}
    fi

    if [ ! -f "${CFM_logs_file}" ] ; then
       echo "info msg= ${date_day}" > ${CFM_logs_file}
    fi
 
    local pid=`cat ${Clash_pid_file} 2> /dev/null`
    if (cat /proc/${pid}/cmdline | grep -q clash) ; then
        echo "info msg= Mendeteksi bahwa Clash telah dimulai." >> ${CFM_logs_file}
        exit 1
    fi

    if [ -f "${temporary_config_file}" ] ; then
       rm -rf ${temporary_config_file}
    fi

    if [ -f "${Clash_dns}" ] ; then
       if [ -f "${Clash_config_file}" ] ; then
          sed -i '/^[  ]*$/d' ${Clash_dns}
          cp -f ${Clash_dns} ${temporary_config_file}.swp
          echo "" >> ${temporary_config_file}.swp
          sed -n -E '/^proxies:$/,$p' ${Clash_config_file} >> ${temporary_config_file}.swp
          else
       echo "error msg= File konfigurasi  ''${Clash_config_file}'' tidak ditemukan !!!" >> ${CFM_logs_file}
       fi
       else
    echo "error msg= File konfigurasi  ''${Clash_dns}'' tidak ditemukan !!!" >> ${CFM_logs_file}
    fi

    mv -f ${temporary_config_file}.swp ${temporary_config_file} \
    && echo "info msg= Pengabungan file konfigurasi berhasil" >> ${CFM_logs_file} || echo "error msg= Penggabungan file konfigurasi Gagal" >> ${CFM_logs_file}

    if [ ! -f "${temporary_config_file}" ] ; then
       exit 1
    fi
    
    if [ -f "${Clash_bin_path}" ] ; then
       chown ${Clash_user_group} ${Clash_bin_path}
       chown ${Clash_user_group} ${Clash_data_dir}/confs/*
       chmod ${Clash_permissions} ${Clash_bin_path}
       chown ${Clash_user_group} ${temporary_config_file}
       chmod 0644 ${temporary_config_file}
       chmod 0644 ${Clash_data_dir}/confs/*
       setcap 'cap_net_admin,cap_net_raw+ep' ${Clash_bin_path}
       echo "info msg= Mengatur permissions file " >> ${CFM_logs_file}
       
       if [ "${set_interval}" = "true" ] ; then
          ${busybox_path} crontab -c ${Clash_run_path} -r
          touch ${Clash_run_path}/root
          chmod 0600 ${Clash_run_path}/root
          # Set interval update
          echo "${update_interval} ${scripts_dir}/clash.tool -u" > ${Clash_run_path}/root \
          && echo "info msg= Auto Update GeoX timer dihidupkan." >> ${CFM_logs_file}
          echo "*/1 * * * * ${scripts_dir}/clash.tool -k" >> ${Clash_run_path}/root \
          && echo "info msg= Dns dibuka." >> ${CFM_logs_file}
       else
          echo "info msg= Auto update off" >> ${CFM_logs_file}
       fi
   else
      echo "error msg= Clash off." >> ${CFM_logs_file}
      echo "error msg= Kernel Clash di ''${Clash_bin_path}'' tidak terdeteksi." >> ${CFM_logs_file}
      exit 1
   fi

   if [ "${mode_iptables}" = "tun" ] ; then
       mkdir -p /dev/net
       if [ ! -L /dev/net/tun ] ; then
           ln -s /dev/tun /dev/net/tun
       fi
   fi

   if [ -f ${temporary_config_file} ] ; then
       ${Clash_bin_path} -t -d ${Clash_data_dir} -f ${temporary_config_file} > ${Clash_run_path}/clash.logs
       if [ "$?" = 0 ] ; then
          ulimit -SHn 1000000
          nohup ${busybox_path} setuidgid 0:3005 ${Clash_bin_path} -d ${Clash_data_dir} -f ${temporary_config_file} > /dev/null 2>&1 &
          echo -n $! > ${Clash_pid_file}

          grep "level=" ${Clash_run_path}/clash.logs | ${busybox_path} awk -F 'level=' '{print $2}' >> ${CFM_logs_file}
          echo "info msg= `grep "file" ${Clash_run_path}/clash.logs`" >>  ${CFM_logs_file}
          echo "info msg= Clash on." >> ${CFM_logs_file}
       else
          grep "level=" ${Clash_run_path}/clash.logs | ${busybox_path} awk -F 'level=' '{print $2}' >> ${CFM_logs_file}
          if [ -f "${temporary_config_file}" ] ; then
          mv -f ${temporary_config_file} ${Clash_config_file}
          rm -rf ${temporary_config_file}
          fi
        echo "error msg= Clash off" >> ${CFM_logs_file}
        echo "error msg= Periksa kembali ''${Clash_config_file}''." >> ${CFM_logs_file}
        exit 1
       fi
   else
    echo "error msg= Clash off." >> ${CFM_logs_file}
    echo "error msg= ''${Clash_config_file}'' tidak terdeteksi." >> ${CFM_logs_file}
    exit 1
   fi
}

stop_clash() {
    kill -15 `cat ${Clash_pid_file}`
    rm -rf ${Clash_pid_file}
    rm -rf ${Clash_run_path}/appuid.list
    if [ -f "${Clash_run_path}/root" ] ; then
       rm -rf ${Clash_run_path}/root
    fi
    echo "info msg= Clash dihentikan" >> ${CFM_logs_file}
}

while getopts ":sk" signal ; do
    case ${signal} in
        s)
            start_clash
            ;;
        k)
            stop_clash
            ;;
        ?)
            echo ""
            ;;
    esac
done
