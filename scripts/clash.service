#!/system/bin/sh

scripts=`realpath $0`
scripts_dir=`dirname ${scripts}`
. /data/adb/clash/scripts/clash.config

start_clash() {
    rm -rf /data/adb/clash/run/*`date "+%Z"`.log

    if [ "${config_online}" = "true" ] ; then
        if ! [ "$(head -1 /data/adb/clash/run/root)" = "disable" ] ; then
            if ! (${scripts_dir}/clash.tool -o) ; then
                echo "error msg= Gagal download Config, pastikan terkoneksi internet" >> ${CFM_logs_file}
                exit 1
            fi
        fi
    fi

    if [ "${ipv6}" = "false" ] ; then
        echo 1 > /proc/sys/net/ipv6/conf/lo/disable_ipv6
        echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6

        echo 0 > /proc/sys/net/ipv6/conf/all/accept_ra
        echo 0 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
        echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
        echo 1 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
    else
        echo 0 > /proc/sys/net/ipv6/conf/lo/disable_ipv6
        echo 0 > /proc/sys/net/ipv6/conf/default/disable_ipv6

        echo 1 > /proc/sys/net/ipv6/conf/all/accept_ra
        echo 1 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
        echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6
        echo 0 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
    fi

    echo -n "" > ${CFM_logs_file}
    echo "${date_day}" > ${CFM_logs_file}
    ${Clash_bin_path} -v >> ${CFM_logs_file} 
    echo "Clash for Magisk v1.10.5" > /dev/null

    if [ ! -d ${Clash_data_dir}/switch ] ; then
        if [ ! "${use_config}" == "false" ]; then
            echo "info msg= folder switch tidak ditentukan" >> ${CFM_logs_file}
            echo "info msg= create folder switch" >> ${CFM_logs_file}
            mkdir -p ${Clash_data_dir}/switch
        fi
    fi

    if [ ! "${use_config}" == "false" ]; then
        echo "info msg= Config ${use_config}" >> ${CFM_logs_file}
    else
        echo "info msg= Config default" >> ${CFM_logs_file}
    fi

    if [ "${use_premium}" == "true" ]; then
        echo "info msg= Using Clash Premium" >> ${CFM_logs_file}
    else
        echo "info msg= Using Clash Meta" >> ${CFM_logs_file}
    fi
 
    local PID=`cat ${Clash_pid_file} 2> /dev/null`
    if (cat /proc/${PID}/cmdline | grep -q ${Clash_bin_name}) ; then
        ${scripts_dir}/clash.tproxy -s
        exit 1
    else
        echo "info msg= Executed Clash service" >> ${CFM_logs_file}
    fi

    if [ "${Clash_tun_status}" = "true" ] ; then
        mkdir -p /dev/net
        [ ! -L /dev/net/tun ] && ln -s /dev/tun /dev/net/tun
        echo "warning msg= mengunakan mode (tun)." >> ${CFM_logs_file}
        echo "warning msg= create  /dev/net/tun." >> ${CFM_logs_file}
    else
        echo "warning msg= mengunakan mode (tproxy)." >> ${CFM_logs_file}
    fi

    if [ -f "${temporary_config_file}" ] ; then
        rm -rf ${temporary_config_file}
        echo "info msg= refresh ${temporary_config_file}" >> ${CFM_logs_file}
    fi

    if [ -f "${Clash_dns}" ] ; then
       if [ -f "${Clash_config_file}" ] ; then
          cp -f ${Clash_dns} ${temporary_config_file}.swp && echo "\n" >> ${temporary_config_file}.swp
          sed -n -E '/^proxies:$/,$p' ${Clash_config_file} >> ${temporary_config_file}.swp
          sed -i '/^[  ]*$/d' ${temporary_config_file}.swp
       else
          echo "error msg= files ${Clash_config_file} tidak ditemukan !!!" >> ${CFM_logs_file}
          exit 1
       fi
    else
       echo "error msg= files ${Clash_dns} tidak ditemukan !!!" >> ${CFM_logs_file}
       exit 1
    fi

    mv ${temporary_config_file}.swp ${temporary_config_file} \
    && echo "info msg= merge files ${Clash_config_file} & template Succes" >> ${CFM_logs_file} || echo "error msg= merge files ${Clash_config_file} & template failed !!!" >> ${CFM_logs_file}

    if [ ! -f "${temporary_config_file}" ] ; then
       echo "error msg= ${temporary_config_file} tidak terdeteksi !!!." >> ${CFM_logs_file}
       exit 1
    fi

    if [ -f "${Clash_bin_path}" ] ; then
        echo "info msg= set permissions Clash ${Clash_user_group}" >> ${CFM_logs_file}
        chown 0:0 ${Clash_bin_path}
        chown 0:0 ${temporary_config_file}
        chmod 0700 ${Clash_bin_path}
        chmod 0644 ${temporary_config_file}
        setcap 'cap_net_admin,cap_net_raw+ep' ${Clash_bin_path}

        /data/adb/magisk/busybox crontab -c /data/adb/clash/run -r
        touch /data/adb/clash/run/root
        chmod 0600 /data/adb/clash/run/root

        if [ "${update_interval}" = "false" ]; then
            echo "info msg= auto Update Geo & Subs not active." >> ${CFM_logs_file}
        else
            echo "${update_interval} ${scripts_dir}/clash.tool -u" > ${Clash_run_path}/root \
            && echo "info msg= auto Update GeoX & SubScription (${update_interval})." >> ${CFM_logs_file}
            echo "info msg= Geo status: (${auto_updateGeoX}) | Subs status: (${auto_updateSubcript})." >> ${CFM_logs_file}
        fi

        if [ "${static_dns}" = "false" ]; then
            echo "info msg= static dns: ${static_dns}." >> ${CFM_logs_file}
        else
            echo "*/1 * * * * ${scripts_dir}/clash.tool -k" >> ${Clash_run_path}/root \
            && echo "warning msg= set static dns: ${static_dns}." >> ${CFM_logs_file}
        fi

        sed -i '/^[  ]*$/d' ${CFM_logs_file}
        if [ "${filter_local}" = "true" ] && [ "${Clash_tun_status}" = "false" ] ; then
            clash_cron="${scripts_dir}/clash.tool -a"
            echo "* */10 * * * ${clash_cron}" >> ${Clash_run_path}/root && echo "warning msg= bypass otomatis ip lokal dihidupkan." >> ${CFM_logs_file}
        else
            echo "info msg= local ip auto bypass is turned off." >> ${CFM_logs_file}
        fi
    else
        echo "error msg= Kernel Clash ${Clash_bin_path} tidak terdeteksi !!!." >> ${CFM_logs_file}
        exit 1
    fi

   if [ -f ${temporary_config_file} ] ; then
       ${Clash_bin_path} -t -d ${Clash_data_dir} -f ${temporary_config_file} > ${Clash_run_path}/clash.log
       if [ "$?" = 0 ] ; then
           ulimit -SHn 1000000
           nohup /data/adb/magisk/busybox setuidgid 0:3005 /data/adb/clash/core/"${Clash_bin_name}" -d /data/adb/clash -f /data/adb/clash/run/config.yaml > /data/adb/clash/run/Core.${date_day}.log 2>&1 &
           echo -n $! > ${Clash_pid_file}
           echo "info msg= tcp-concurrent:${Clash_tcp_concurrent}" >> ${CFM_logs_file}
           if [ "${Cgroup_memory}" = "true" ] ; then
               if ! (${scripts_dir}/clash.tool -l) ; then
                  echo -n ""
               fi
           else
               echo "info msg= Cgroup | status: ${Cgroup_memory}" >> ${CFM_logs_file}
           fi
           sleep 0.5
           echo "info msg= test ${temporary_config_file}" >> ${CFM_logs_file}
           echo "`grep "level=" ${Clash_run_path}/clash.log | ${busybox_path} awk -F 'level=' '{print $2}'`" >> ${CFM_logs_file}
           echo "info msg= `grep "test" ${Clash_run_path}/clash.log`" >>  ${CFM_logs_file}
       else
           grep "level=" ${Clash_run_path}/clash.log | ${busybox_path} awk -F 'level=' '{print $2}' >> ${CFM_logs_file}
           if [ "${use_config}" == "false" ]; then
               mv ${temporary_config_file} ${Clash_data_dir}/config.yaml
           else
               mv ${temporary_config_file} ${Clash_data_dir}/switch/${use_config}
           fi
           echo "error msg= Check kembali ${Clash_config_file} " >> ${CFM_logs_file}
           exit 1
       fi
   else
       echo "error msg= ${Clash_config_file} tidak terdeteksi." >> ${CFM_logs_file}
       exit 1
   fi

   sleep 0.5

   if [ "${port_detect}" = "true" ]; then
       if ! (${scripts_dir}/clash.tool -p) ; then
           exit 0
       fi
   else
        echo "warning msg= skip port detected" >> ${CFM_logs_file}
   fi
}

stop_clash() {
    clashkill=$(ps -ef | grep root | grep "${Clash_bin_name} -d /data/adb/clash" | /data/adb/magisk/busybox awk '{ print $2 }' | sort -u)
    for clashkil in ${clashkill[*]} ; do
       if [ "${Clash_tun_status}" = "true" ] ; then
          kill -9 ${clashkil}
       else
          kill -15 ${clashkil}
       fi
    done

    sleep 0.5

    cronkill=$(ps -ef | grep root | grep "crond -c /data/adb/clash/" | /data/adb/magisk/busybox awk '{ print $2 }' | sort -u)
    for cronkil in ${cronkill[*]} ; do
       kill -15 ${cronkil}
    done

    local PIDs=`cat ${Clash_pid_file} 2> /dev/null`
    if (cat /proc/${PIDs}/cmdline | grep -q ${Clash_bin_name}) ; then
        echo "error msg= failed to stop Clash." >> ${CFM_logs_file}
        ${scripts_dir}/clash.tproxy -s
        exit 1
    else
        echo "warning msg= Clash has stopped." >> ${CFM_logs_file}
    fi

    rm -rf /data/adb/clash/run/appuid.list
    rm -rf ${Clash_pid_file}
}

while getopts ":sk" signal ; do
    case ${signal} in
        s)
            start_clash
            ;;
        k)
            stop_clash
            ;;
        ?)
            echo ""
            ;;
    esac
done
