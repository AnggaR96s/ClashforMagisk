#!/system/bin/sh

scripts=`realpath $0`
scripts_dir=`dirname ${scripts}`
. ${scripts_dir}/clash.config

start_clash() {
    if [ "${ipv6}" = "false" ] ; then
        for net in /proc/sys/net/ipv6/conf/{wlan*,*data*} ; do
            echo ${net} | grep -q wlan
            if [ $? -eq 0 ] ; then
                echo 0 > ${net}/accept_ra
            fi
            echo 1 > ${net}/disable_ipv6
        done
    else
        for net in /proc/sys/net/ipv6/conf/{wlan*,*data*} ; do
            echo ${net} | grep -q wlan
            if [ $? -eq 0 ] ; then
                echo 1 > ${net}/accept_ra
            fi
            echo 0 > ${net}/disable_ipv6
        done
    fi

    if [ -f "${CFM_logs_file}" ] ; then
        echo "${date_day}" > ${CFM_logs_file}
#        echo "time     output" >> ${CFM_logs_file}
    fi
 
    local pid=`cat ${Clash_pid_file} 2> /dev/null`
    if (cat /proc/${pid}/cmdline | grep -q clash) ; then
        echo "info msg= Mendeteksi bahwa Clash telah dimulai." >> ${CFM_logs_file}
        exit 1
    fi

    if [ "${Clash_tun_status}" = "true" ] ; then
        mkdir -p /dev/net
        if [ ! -L /dev/net/tun ] ; then
            ln -s /dev/tun /dev/net/tun
        fi
    fi

    if [ -f "${Temporary_config_file}" ] ; then
        rm -rf ${Temporary_config_file}
    fi

    if [ -f "${Clash_dns}" ] ; then
       if [ -f "${Clash_config_file}" ] ; then
          cp -f ${Clash_dns} ${Temporary_config_file}.swp && echo "\n" >> ${Temporary_config_file}.swp
          sed -n -E '/^proxies:$/,$p' ${Clash_config_file} >> ${Temporary_config_file}.swp
          sed -i '/^[  ]*$/d' ${Temporary_config_file}.swp
          else
       echo "error msg= file konfigurasi ''${Clash_config_file}'' tidak ditemukan !!!" >> ${CFM_logs_file}
       exit 1
       fi
       else
    echo "error msg= file konfigurasi  ''${Clash_dns}'' tidak ditemukan !!!" >> ${CFM_logs_file}
    exit 1
    fi

    mv -f ${Temporary_config_file}.swp ${Temporary_config_file} \
    && echo "info msg= Pengabungan file konfigurasi berhasil" >> ${CFM_logs_file} || echo "error msg= Penggabungan file konfigurasi Gagal" >> ${CFM_logs_file}

    if [ ! -f "${Temporary_config_file}" ] ; then
       echo "error msg= ${Temporary_config_file} tidak di temukan !!!" >> ${CFM_logs_file}
       exit 1
    fi

    sed -i '/^[  ]*$/d' ${CFM_logs_file}
    if [ "${filter_local}" = "true" ] ; then
        com="${scripts_dir}/clash.tool -m ; sleep 10 ;${scripts_dir}/clash.tool -m ; sleep 10; ${scripts_dir}/clash.tool -m ;sleep 10; ${scripts_dir}/clash.tool -m;sleep 10;${scripts_dir}/clash.tool -m ; sleep 10;${scripts_dir}/clash.tool -m"
        echo "*/1 * * * * ${com}" >> ${Clash_run_path}/root && echo "info msg= bypass otomatis ip lokal diaktifkan." >> ${CFM_logs_file}
    fi
 
    if [ -f "${Clash_bin_path}" ] ; then
       chown ${Clash_user_group} ${Clash_bin_path}
       chown ${Clash_user_group} ${Clash_data_dir}/confs/*
       chmod ${Clash_permissions} ${Clash_bin_path}
       chown ${Clash_user_group} ${Temporary_config_file}
       chmod 0644 ${Temporary_config_file}
       chmod 0644 ${Clash_data_dir}/confs/*
       setcap 'cap_net_admin,cap_net_raw+ep' ${Clash_bin_path}
       echo "info msg= Mengatur permissions file " >> ${CFM_logs_file}
       
       if [ "${auto_update_GeoX}" = "true" ] ; then
          ${busybox_path} crontab -c ${Clash_run_path} -r
          touch ${Clash_run_path}/root
          chmod 0600 ${Clash_run_path}/root
          echo "${update_interval} ${scripts_dir}/clash.tool -u" > ${Clash_run_path}/root \
          && echo "info msg= Update GeoX timer dihidupkan." >> ${CFM_logs_file}
       else
          echo "info msg= Update Geo Off" >> ${CFM_logs_file}
       fi

       if [ "${static_dns_interval}" = "true" ] ; then
          echo "*/1 * * * * ${scripts_dir}/clash.tool -k" >> ${Clash_run_path}/root \
          && echo "info msg= dns dibuka." >> ${CFM_logs_file}
       else
          echo "info msg= static dns Off" >> ${CFM_logs_file}
       fi
   else
      echo "error msg= Clash Offline." >> ${CFM_logs_file}
      echo "error msg= Kernel Clash di ''${Clash_bin_path}'' tidak terdeteksi." >> ${CFM_logs_file}
      exit 1
   fi

   if [ -f ${Temporary_config_file} ] ; then
       ${Clash_bin_path} -t -d ${Clash_data_dir} -f ${Temporary_config_file} > ${Clash_run_path}/clash.log #/dev/null 2>&1 & 
       if [ "$?" = 0 ] ; then
          ulimit -SHn 1000000
          nohup ${busybox_path} setuidgid 0:3005 ${Clash_bin_path} -d ${Clash_data_dir} -f ${Clash_run_path}/config.yaml > /dev/null 2>&1 &
          echo -n $! > ${Clash_pid_file}
          if [ "${Cgroup_memory}" = "true" ] ; then
              if ! (${scripts_dir}/clash.tool -l) ; then
                 echo "" 
              fi
          else
              echo "info msg= Cgroup Off"  >> ${CFM_logs_file}
          fi
          echo "`grep "level=" ${Clash_run_path}/clash.log | ${busybox_path} awk -F 'level=' '{print $2}'`" >> ${CFM_logs_file}
          echo "info msg= `grep "file" ${Clash_run_path}/clash.log`" >>  ${CFM_logs_file}
          echo "info msg= Clash Online." >> ${CFM_logs_file}
       else
          grep "level=" ${Clash_run_path}/clash.log | ${busybox_path} awk -F 'level=' '{print $2}' >> ${CFM_logs_file}
          if [ -f "${Temporary_config_file}" ] ; then
             mv ${Temporary_config_file} ${Clash_config_file}
             rm -rf ${Temporary_config_file}
          fi
        echo "error msg= Clash Offline" >> ${CFM_logs_file}
        echo "error msg= Periksa kembali ''${Clash_config_file}''." >> ${CFM_logs_file}
        exit 1
       fi
   else
    echo "error msg= Clash Offline." >> ${CFM_logs_file}
    echo "error msg= ''${Clash_config_file}'' tidak terdeteksi." >> ${CFM_logs_file}
    exit 1
   fi

   sleep 2

if [ "${iptables_w}" = "true" ]; then
    echo "info msg= mengunakan ${iptables_wait}" >> ${CFM_logs_file}
elif [ "${iptables_w}" = "false" ]; then
    echo "info msg= mengunakan ${iptables_wait}" >> ${CFM_logs_file}
fi

   if [ "${skip_detect_port}" = "false" ] ; then
      if ! (${scripts_dir}/clash.tool -p) ; then
         kill -15 `cat ${Clash_pid_file}`
         rm -rf ${Clash_pid_file}
         echo "error msg= Can't detect port, Clash Offline" >> ${CFM_logs_file}
         echo "error msg= set 'true' skip_detect_port di ${scripts_dir}/clash.config" >> ${CFM_logs_file}
         exit 1
      fi
   else
      echo "info msg= Skip detected port On" >> ${CFM_logs_file}
   fi
}

stop_clash() {
    if [ "${Clash_tun_status}" = "true" ] || [ ! "${Clash_tun_status}" = "false" ] ; then
        kill -9 `cat ${Clash_pid_file}`
    else
        kill -15 `cat ${Clash_pid_file}`
    fi

    rm -rf ${Clash_pid_file}

    if [ -f "${Clash_run_path}/root" ] ; then
       rm -rf ${Clash_run_path}/root
    fi

    if [ "${Clash_tun_status}" = "false" ] ; then
        echo "info msg= Clash Offline" >> ${CFM_logs_file}
    elif [ "${Clash_tun_status}" = "false" ] ; then
        echo -n "" >> ${CFM_logs_file}
    fi
}

while getopts ":sk" signal ; do
    case ${signal} in
        s)
            start_clash
            ;;
        k)
            stop_clash
            ;;
        ?)
            echo ""
            ;;
    esac
done
